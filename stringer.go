// Code generated by "stringer -output stringer.go -linecomment -type=ch"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AND-57344]
	_ = x[ARRAY-57345]
	_ = x[ASSIGN-57346]
	_ = x[BEGIN-57347]
	_ = x[CASE-57348]
	_ = x[CONST-57349]
	_ = x[DD-57350]
	_ = x[DIV-57351]
	_ = x[DO-57352]
	_ = x[DOWNTO-57353]
	_ = x[ELSE-57354]
	_ = x[END-57355]
	_ = x[FILE-57356]
	_ = x[FOR-57357]
	_ = x[FUNCTION-57358]
	_ = x[GE-57359]
	_ = x[GOTO-57360]
	_ = x[IDENTIFIER-57361]
	_ = x[IF-57362]
	_ = x[IN-57363]
	_ = x[INT_LITERAL-57364]
	_ = x[LABEL-57365]
	_ = x[LE-57366]
	_ = x[MOD-57367]
	_ = x[NE-57368]
	_ = x[NIL-57369]
	_ = x[NOT-57370]
	_ = x[OF-57371]
	_ = x[OR-57372]
	_ = x[OTHERS-57373]
	_ = x[PACKED-57374]
	_ = x[PROCEDURE-57375]
	_ = x[PROGRAM-57376]
	_ = x[REAL_LITERAL-57377]
	_ = x[RECORD-57378]
	_ = x[REPEAT-57379]
	_ = x[SEP-57380]
	_ = x[SET-57381]
	_ = x[STR_LITERAL-57382]
	_ = x[THEN-57383]
	_ = x[TO-57384]
	_ = x[TYPE-57385]
	_ = x[UNTIL-57386]
	_ = x[VAR-57387]
	_ = x[WHILE-57388]
	_ = x[WITH-57389]
}

const _ch_name = "andarrayassignbegincaseconst..divdodowntoelseendfileforfunction>=gotoidentifierifininteger literallabel<=mod<>nilnotoforotherspackedprocedureprogramreal literalrecordrepeatseparatorsetstring literalthentotypeuntilvarwhilewith"

var _ch_index = [...]uint8{0, 3, 8, 14, 19, 23, 28, 30, 33, 35, 41, 45, 48, 52, 55, 63, 65, 69, 79, 81, 83, 98, 103, 105, 108, 110, 113, 116, 118, 120, 126, 132, 141, 148, 160, 166, 172, 181, 184, 198, 202, 204, 208, 213, 216, 221, 225}

func (i ch) String() string {
	i -= 57344
	if i < 0 || i >= ch(len(_ch_index)-1) {
		return "ch(" + strconv.FormatInt(int64(i+57344), 10) + ")"
	}
	return _ch_name[_ch_index[i]:_ch_index[i+1]]
}
